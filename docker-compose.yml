version: "3.8"

services:
  db:
    build: ./sql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  python_script:
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    build:
      context: .
      dockerfile: sql/Dockerfile.python
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  app:
    build:
      context: ./go
      dockerfile: Dockerfile
    ports:
      - "${VUE_APP_API_PORT}:8081"
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      VUE_APP_URL: ${VUE_APP_URL}
      VUE_APP_PORT: ${VUE_APP_PORT}
      VUE_APP_API_URL: ${VUE_APP_API_URL}
      VUE_APP_API_PORT: ${VUE_APP_API_PORT}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./vue/:/vue/
      - ./go/:/go
    depends_on:
      db:
        condition: service_healthy

  # frontend:
  #   build: ./vue
  #   ports:
  #     - "${VUE_APP_PORT}:8080"
  #   environment:
  #     VUE_APP_URL: ${VUE_APP_URL}
  #     VUE_APP_PORT: ${VUE_APP_PORT}
  #     VUE_APP_API_URL: ${VUE_APP_API_URL}
  #     VUE_APP_API_PORT: ${VUE_APP_API_PORT}
  #   depends_on:
  #     - app

volumes:
  mysql_data:

networks:
  default:
    driver: bridge
